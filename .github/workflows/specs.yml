name: SPECS

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

env:
    SYMFONY_ENV: 'dev'
    DATABASE_URL: 'sqlite:///%kernel.project_dir%/var/specs.db'

jobs:

    build:

        runs-on: ubuntu-latest

        steps:

            # —— Setup GitHub actions —————————————————————————————————————————————

            # https://github.com/actions/checkout (official)
            -
                name: Checkout
                uses: actions/checkout@v2

            # —— Setup Environment —————————————————————————————————————————————

            # https://github.com/shivammathur/setup-php (community)
            -
                name: Setup PHP, extensions and composer with shivammathur/setup-php
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '7.4'
                    extensions: mbstring, intl, sqlite, json, simplexml
                    tools: composer:v2, symfony
                    ini-values: date.timezone=Europe/Paris
                    coverage: none
                env:
                    update: true

            # https://github.com/actions/setup-node (community)

            -
                name: Setup Node.js with actions/setup-node
                uses: actions/setup-node@v2
                with:
                    node-version: 14

            # —— Composer ‍—————————————————————————————————————————————————————————

            -
                name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -
                name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -
                name: Install Composer dependencies
                run: composer install --no-progress --ansi --prefer-dist --optimize-autoloader --no-interaction

            ## —— Prepare Environment ——————————————————————————————————————————————

            -
                name: Generate RSA keys needed for authentication
                run: |
                    openssl genrsa -out config/jwt/private.pem -aes256 -passout pass:passphrase 4096
                    openssl rsa -pubout -in config/jwt/private.pem -out config/jwt/public.pem -passin pass:passphrase

            -
                name: Prepare database
                run: |
                    bin/console doctrine:database:create
                    bin/console doctrine:schema:create

            -
                name: Symfony warmup
                run: |
                    bin/console cache:clear --env=dev

            ## —— Run SPECS ——————————————————————————————————————————————

            -
                name: Launch PHP server
                run: symfony local:server:start --no-tls -d

            -
                name: Run specs tests
                run: APIURL=http://127.0.0.1:8000/api ./spec/api-spec-test-runner.sh

            -
                name: Stop PHP server
                run: symfony local:server:stop
