security:

    encoders:

        App\Entity\User:
            algorithm: bcrypt

    providers:

        db_users:
            entity:
                class: App\Entity\User
                property: email

    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern: ^/api/users/login
            stateless: true
            anonymous: true
            json_login:
                check_path: api_users_login
                username_path: user.email
                password_path: user.password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - App\Security\JWTAuthenticator

#    access_control:
#        - { path: ^/api/users/login, methods: [POST], roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/users, methods: [POST], roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/tags, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/articles$, methods: [GET], roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api/articles/([A-Za-z0-9])$, methods: [GET], roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/api, roles: ROLE_USER }
#        - { path: ^/api, roles: IS_AUTHENTICATED_ANONYMOUSLY }
